from dreaminsg_integrated_model.network_sim_models.interdependencies import *
import pandapower as pp


def get_power_dict():
    """Creates a dictionary of major power system components in a network. Used for naming automatically generated networks.

    Returns:
        [dictionary of string: string] -- Mapping of infrastructure component abbreviations to names.
    """
    power_dict = {
        "B": {
            "code": "bus",
            "name": "Bus",
            "connect_field": "name",
            "repair_time": 3,
        },
        "LO": {
            "code": "load",
            "name": "Load",
            "connect_field": "bus",
            "repair_time": 3,
        },
        "SG": {
            "code": "sgen",
            "name": "Static Generator",
            "connect_field": "bus",
            "repair_time": 24,
        },
        "MP": {
            "code": "motor",
            "name": "Motor",
            "connect_field": "bus",
            "repair_time": 24,
        },
        "AL": {
            "code": "asymmetric_load",
            "name": "Asymmetric Load",
            "connect_field": "bus",
            "repair_time": 10,
        },
        "AS": {
            "code": "asymmetric_sgen",
            "name": "Asymmetric Static Generator",
            "connect_field": "bus",
            "repair_time": 10,
        },
        "ST": {
            "code": "storage",
            "name": "Storage",
            "connect_field": "bus",
            "repair_time": 5,
        },
        "G": {
            "code": "gen",
            "name": "Generator",
            "connect_field": "bus",
            "repair_time": 24,
        },
        "SW": {
            "code": "switch",
            "name": "Switch",
            "connect_field": "bus",
            "repair_time": 4,
        },
        "SH": {
            "code": "shunt",
            "name": "Shunt",
            "connect_field": "bus",
            "repair_time": 3,
        },
        "EG": {
            "code": "ext_grid",
            "name": "External Grid",
            "connect_field": "bus",
            "repair_time": 10,
        },
        "L": {
            "code": "line",
            "name": "Line",
            "connect_field": "from_bus",
            "repair_time": 3,
        },
        "TF": {
            "code": "trafo",
            "name": "Transformer",
            "connect_field": "hv_bus",
            "repair_time": 10,
        },
        "TH": {
            "code": "trafo3w",
            "name": "Three Phase Transformer",
            "connect_field": "hv_bus",
            "repair_time": 10,
        },
        "I": {
            "code": "impedance",
            "name": "Impedance",
            "connect_field": "from_bus",
            "repair_time": 5,
        },
        "DL": {
            "code": "dcline",
            "name": "DCLine",
            "connect_field": "from_bus",
            "repair_time": 3,
        },
    }
    return power_dict


def load_power_network(network_json):
    """Loads the power system model from a *.json file.

    Arguments:
        network_inp {string} -- Location of the *.json power system file generated by pandapower package.

    Returns:
        object -- The loaded power system model object.
    """
    pn = pp.from_json(network_json, convert=True)
    print("Power system successfully loaded from {}\n".format(network_json))
    return pn


def run_power_simulation(pn):
    """Runs the power flow model for an instance.

    Arguments:
        pn {object} -- A power system model object generated by pandapower package.
    """
    pn_sim = pp.runpp(pn)
